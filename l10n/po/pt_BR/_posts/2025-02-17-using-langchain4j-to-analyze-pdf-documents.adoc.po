msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Using LangChain4j to analyze PDF documents"
msgstr "Usando o LangChain4j para analisar documentos PDF"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Learn how to extract structured metadata from PDF documents using LangChain4j and AI to automate document analysis."
msgstr "Saiba como extrair metadados estruturados de documentos PDF usando LangChain4j e IA para automatizar a análise de documentos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"In my consulting work, clients frequently present us with challenging problems that require innovative solutions.\n"
"Recently, we were tasked with extracting structured metadata from PDF documents through automated analysis. Below, I'll share a simplified version of this real-world challenge and how we approached it."
msgstr "Em meu trabalho de consultoria, os clientes frequentemente nos apresentam problemas desafiadores que exigem soluções inovadoras. Recentemente, recebemos a tarefa de extrair metadados estruturados de documentos PDF por meio de análise automatizada. A seguir, compartilharei uma versão simplificada desse desafio do mundo real e como o abordamos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Use Case"
msgstr "Caso de uso"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our client receives compressed archives (.zip files) containing up to hundreds of portable document format (PDF) lease documents that need review. Each document contains property lease details that must be validated for accuracy. The review process involves checking various business rules - for example, identifying leases with terms shorter than 2 years. Currently, this document validation is done manually, which is time-consuming. The client wants to automate and streamline this review workflow to improve efficiency."
msgstr "Nosso cliente recebe arquivos compactados (arquivos .zip) contendo até centenas de documentos de locação em formato de documento portátil (PDF) que precisam ser revisados. Cada documento contém detalhes de aluguel de imóveis que devem ser validados quanto à precisão. O processo de revisão envolve a verificação de várias regras comerciais, por exemplo, a identificação de arrendamentos com prazos inferiores a 2 anos. Atualmente, essa validação de documentos é feita manualmente, o que consome muito tempo. O cliente deseja automatizar e otimizar esse fluxo de trabalho de revisão para aumentar a eficiência."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Some complications with these lease documents are:"
msgstr "Algumas complicações com esses documentos de arrendamento são:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents are not in a standard format so each lease may be written in a different way by a different property manager."
msgstr "Os documentos não estão em um formato padrão, portanto, cada contrato de locação pode ser redigido de uma maneira diferente por um gerente de propriedade diferente."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may be scanned, so the text is sometimes human writing and not typewritten."
msgstr "Os documentos podem ser digitalizados, portanto, às vezes o texto é escrito por humanos e não digitado."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may contain multiple pages, which are not always in the same order."
msgstr "Os documentos podem conter várias páginas, que nem sempre estão na mesma ordem."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The lease terms may not be an actual date but written as \"Expires five years from the start date\" or \"Expires on the anniversary of the start date\"."
msgstr "Os termos do arrendamento podem não ter uma data real, mas podem ser escritos como \"Expira cinco anos a partir da data de início\" ou \"Expira no aniversário da data de início\"."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Metadata such as acreage and tax parcel information is needed by our client to validate the lease details."
msgstr "Metadados como informações de área e parcelas fiscais são necessários para que nosso cliente valide os detalhes do arrendamento."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can understand why this is time consuming for a human to review and validate the documents."
msgstr "O senhor pode entender por que é demorado para um ser humano revisar e validar os documentos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our Solution"
msgstr "Nossa solução"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "After consulting with https://github.com/dliubarskyi[Dmytro Liubarskyi] and collaborating with the Quarkus team, we implemented a solution using LangChain4j for document metadata extraction. We chose https://ai.google.dev/docs/gemini_api_overview[Google Gemini] as our Large Language Model (LLM) since it excels at PDF analysis through its built-in Optical Character Recognition (OCR) capabilities, enabling accurate text extraction from both digital and scanned documents."
msgstr "Depois de consultar link:https://github.com/dliubarskyi[Dmytro Liubarskyi] e colaborar com a equipe da Quarkus, implementamos uma solução usando o LangChain4j para extração de metadados de documentos. Escolhemos link:https://ai.google.dev/docs/gemini_api_overview[o Google Gemini] como nosso Modelo de Linguagem Grande (LLM), pois ele se destaca na análise de PDFs por meio de seus recursos integrados de reconhecimento óptico de caracteres (OCR), permitindo a extração precisa de texto de documentos digitais e digitalizados."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Technical Details"
msgstr "Detalhes técnicos"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The application is built using:"
msgstr "O aplicativo é desenvolvido usando:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus - A Kubernetes-native Java framework"
msgstr "Quarkus - Uma estrutura Java nativa do Kubernetes"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "LangChain4j - Java bindings for LangChain to interact with LLMs"
msgstr "LangChain4j - Ligações Java para LangChain para interagir com LLMs"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Google Gemini AI - For PDF document analysis and information extraction"
msgstr "Google Gemini AI - Para análise de documentos PDF e extração de informações"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus REST - For handling multipart file uploads"
msgstr "Quarkus REST - Para lidar com uploads de arquivos com várias partes"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "HTML/JavaScript frontend - Simple UI for file upload and results display"
msgstr "Frontend HTML/JavaScript - Interface de usuário simples para upload de arquivos e exibição de resultados"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The backend processes the PDF through these steps:"
msgstr "O backend processa o PDF por meio destas etapas:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Accepts PDF upload via multipart form data"
msgstr "Aceita upload de PDF por meio de dados de formulário de várias partes"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Converts PDF content to base64 encoding"
msgstr "Converte o conteúdo do PDF em codificação base64"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Sends to Gemini AI with a structured JSON schema for response formatting"
msgstr "Envia para a Gemini AI com um esquema JSON estruturado para formatação da resposta"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Returns parsed lease information in a standardized format"
msgstr "Retorna informações de arrendamento analisadas em um formato padronizado"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Displays results in a tabular format on the web interface"
msgstr "Exibe os resultados em um formato tabular na interface da Web"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The main components are:"
msgstr "Os principais componentes são:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseAnalyzerResource` - REST endpoint for PDF analysis"
msgstr "`LeaseAnalyzerResource` - Ponto de extremidade REST para análise de PDF"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseReport` - Data structure for lease information"
msgstr "`LeaseReport` - Estrutura de dados para informações de arrendamento"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Web interface for file upload and results display"
msgstr "Interface da Web para upload de arquivos e exibição de resultados"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "How it works"
msgstr "Como funciona"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "First we need a Google Gemini API key. You can get one for free, see more details here: https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentation^]."
msgstr "Primeiro, precisamos de uma chave de API do Google Gemini. O senhor pode obter uma gratuitamente, veja mais detalhes aqui: link:https://ai.google.dev/gemini-api/docs/api-key[Documentação da chave da API Gemini] ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to install the LangChain4j dependencies:"
msgstr "Em seguida, precisamos instalar as dependências do LangChain4j:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Configure Gemini LLM"
msgstr "Configurar o Gemini LLM"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to wire up the Gemini LLM to the application (using your Google AI Gemini API key)."
msgstr "Em seguida, precisamos conectar o Gemini LLM ao aplicativo (usando sua chave de API do Google AI Gemini)."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Logging the request and response is optional but can be helpful for debugging."
msgstr "O registro da solicitação e da resposta é opcional, mas pode ser útil para a depuração."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Register the AI service"
msgstr "Registre o serviço de IA"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "We must register the AI service to use the `LeaseAnalyzer` interface."
msgstr "Devemos registrar o serviço de IA para usar a interface `LeaseAnalyzer` ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Define your data structure"
msgstr "Definir sua estrutura de dados"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Now we need to model the data structure for the lease information that we want the LLM to extract from any lease document.  You can customize these fields based on the information you need from the PDF documents but in our use case below we are extracting the following information:"
msgstr "Agora precisamos modelar a estrutura de dados para as informações de arrendamento que queremos que o LLM extraia de qualquer documento de arrendamento. O senhor pode personalizar esses campos com base nas informações de que precisa nos documentos PDF, mas, em nosso caso de uso abaixo, estamos extraindo as seguintes informações:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Create the REST endpoint"
msgstr "Criar o ponto de extremidade REST"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lastly, we need to create a `LeaseAnalyzerResource` class that will use the LLM to extract the lease information from the PDF document."
msgstr "Por fim, precisamos criar uma classe `LeaseAnalyzerResource` que usará o LLM para extrair as informações de locação do documento PDF."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "There is a simple HTML/JavaScript frontend that allows you to upload a PDF document and view the results.  In the example below 3 different lease documents were uploaded and analyzed."
msgstr "Há um frontend simples em HTML/JavaScript que permite que o senhor carregue um documento PDF e visualize os resultados. No exemplo abaixo, três documentos de arrendamento diferentes foram carregados e analisados."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lease Analyzer Results"
msgstr "Resultados do Lease Analyzer"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can find the complete example code on https://github.com/melloware/quarkus-lease-analyzer[GitHub^]."
msgstr "O senhor pode encontrar o código de exemplo completo no link:https://github.com/melloware/quarkus-lease-analyzer[GitHub] ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusão"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "This article demonstrated how LangChain4j and AI can be leveraged to automatically extract structured metadata from PDF documents. By implementing this solution, our client will significantly reduce manual document processing time, potentially saving thousands of work hours annually. The combination of LangChain4j and Google Gemini AI proves to be a powerful approach for automating document analysis workflows."
msgstr "Este artigo demonstrou como o LangChain4j e a IA podem ser aproveitados para extrair automaticamente metadados estruturados de documentos PDF. Ao implementar essa solução, nosso cliente reduzirá significativamente o tempo de processamento manual de documentos, economizando potencialmente milhares de horas de trabalho por ano. A combinação de LangChain4j e Google Gemini AI prova ser uma abordagem poderosa para automatizar fluxos de trabalho de análise de documentos."
