msgid ""
msgstr ""
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Redis Cache"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid ""
"By default, Quarkus Cache uses Caffeine as backend.\n"
"It's possible to use Redis instead."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Redis as cache backend"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "When using Redis as the backend for Quarkus cache, each cached item will be stored in Redis:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid "The backend uses the _<default>_ Redis client (if not configured otherwise), so make sure it's configured (or use the xref:redis-dev-services.adoc[Redis Dev Service])"
msgstr "O backend usa o cliente Redis _<default>_ (se não estiver configurado de outra forma), portanto, certifique-se de que ele esteja configurado (ou use o xref:redis-dev-services.adoc[Redis Dev Service] )"

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid "the Redis key is built as follows: `cache:{cache-name}:{cache-key}`, where `cache-key` is the key the application uses and `cache:{cache-name}` the prefix."
msgstr "A chave do Redis é criada da seguinte forma: `cache:{cache-name}:{cache-key}` , em que `cache-key` é a chave que o aplicativo usa e `cache:{cache-name}` é o prefixo."

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "the value is encoded to JSON if needed"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Use the Redis backend"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "First, you need to add the `quarkus-redis-cache` extension to your project:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Then, use the `@CacheResult` and others cache annotations as explained in the xref:cache.adoc[Quarkus Cache guide]:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Configure the Redis backend"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid ""
"The Redis backend uses the `<default>` Redis client.\n"
"See the xref:redis-reference.adoc[Redis reference] to configure the access to Redis."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "In dev mode, you can use the xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "If you want to use another Redis for your cache, configure the `client-name` as follows:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid ""
"When writing to Redis or reading from Redis, Quarkus needs to know the type.\n"
"Indeed, the objects need to be serialized and deserialized.\n"
"For that purpose, you may need to configure type (class names) of the key and value you want to cache.\n"
"At build time, Quarkus tries to deduce the types from the application code, but that decision can be overridden using:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "You can also configure the time to live of the cached entries:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid ""
"If the `expire-after-write` is not configured, the entry won't be evicted.\n"
"You would need to invalidate the values using the `@CacheInvalidateAll` or `@CacheInvalidate` annotations."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "The following table lists the supported properties:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Configure the Redis key"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid ""
"By default, the Redis backend stores the entry using the following keys pattern: `cache:{cache-name}:{cache-key}`, where `cache-key` is the key the application uses and `cache:{cache-name}` the prefix. The variable `{cache-name}` is resolved from the value set in the cache annotations.\n"
"So, you can find all the entries for a single cache using the Redis `KEYS` command: `KEYS cache:{cache-name}:*`"
msgstr "Por padrão, o backend do Redis armazena a entrada usando o seguinte padrão de chaves: `cache:{cache-name}:{cache-key}` , em que `cache-key` é a chave que o aplicativo usa e `cache:{cache-name}` é o prefixo. A variável `{cache-name}` é resolvida a partir do valor definido nas anotações do cache. Portanto, o senhor pode encontrar todas as entradas de um único cache usando o comando Redis `KEYS` : `KEYS cache:{cache-name}:*`"

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid "The prefix can be configured by using the `prefix` property:"
msgstr "O prefixo pode ser configurado usando a propriedade `prefix` :"

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "In these cases, you can find all the keys managed by the default cache using `KEYS my-cache:*`, and all the keys managed by the `expensiveResourceCache` cache using: `KEYS my-expensive-cache:*`."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid ""
"# Default configuration\n"
"# The variable \"{cache-name}\" is resolved from the value set in the cache annotations.\n"
"quarkus.cache.redis.prefix=my-cache-{cache-name}"
msgstr ""
"# Configuração padrão\n"
"# A variável \"{cache-name}\" é resolvida a partir do valor definido nas anotações do cache.\n"
"quarkus.cache.redis.prefix=my-cache-{cache-name}"

#: _versions/3.20/guides/cache-redis-reference.adoc
#, fuzzy
msgid "In this latest example, you can find all the keys managed by the default cache using `KEYS my-cache-{cache-name}:*`."
msgstr "Neste exemplo mais recente, o senhor pode encontrar todas as chaves gerenciadas pelo cache padrão usando `KEYS my-cache-{cache-name}:*` ."

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "Enable optimistic locking"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid ""
"The access to the cache can be _direct_ or use https://redis.io/docs/manual/transactions/#optimistic-locking-using-check-and-set[optimistic locking].\n"
"By default, optimistic locking is disabled."
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "You can enable optimistic locking using:"
msgstr ""

#: _versions/3.20/guides/cache-redis-reference.adoc
msgid "When used, the key is _watched_ and the _SET_ command is executed in a transaction (`MULTI/EXEC`)."
msgstr ""
